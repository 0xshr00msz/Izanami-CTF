# Generated by Django 5.2.3 on 2025-06-16 07:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sharingan_points', models.IntegerField(default=0)),
                ('chakra_meter', models.IntegerField(default=100)),
                ('current_level', models.CharField(choices=[('academy', 'Academy'), ('chunin', 'Chunin'), ('jonin', 'J≈çnin'), ('uchiha', 'Uchiha')], default='academy', max_length=20)),
                ('genjutsu_counter', models.IntegerField(default=0)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.achievement')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='accounts.playerprofile')),
            ],
            options={
                'unique_together': {('player', 'achievement')},
            },
        ),
    ]
